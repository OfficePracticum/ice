/**
 * Copyright (C) 2018 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */
 
package org.cdsframework.ice.v1_1_0

import java.util.List
import java.util.Set
import java.util.Date
import org.drools.spi.KnowledgeHelper
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseRule
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.RecommendationStatus
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine

expander ../org.cdsframework^ICE^1.0.0/org.cdsframework^ICE^1.0.0.dsl

//declare any global variables here
global java.util.Date evalTime
global org.drools.runtime.KnowledgeContext kcontext


rule "Polio: If a patient is >= 18 years old and has NOT completed the series, then the Recommendation is Conditional and the reason code is HIGH_RISK" ruleflow-group "RecommendationForecast"
	dialect "mvel"
	agenda-group "customRecommendationRule"
    when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.400"
			- the Series is Not Complete
		The patient information $assign_oEvaluatedPerson must be known to complete writing this rule
			- make note of the patient's birthdate as $dtBirthDate
		Confirm elapsed time between $dtBirthDate and evalTime >= "18y"
    then
		Create a Recommendation as $recommendation with Status RecommendationStatus.CONDITIONALLY_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete		// to ensure that no other rules override this recommendation
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end


rule "Polio: If the execution date is before 8/7/2010, modify the Minimum Age of DoseRule 4 to 126 days & the Minimum Interval of DoseRule3 to 28 days" ruleflow-group "RecommendationForecast"
	agenda-group "customRecommendationRule"
	no-loop true
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.400"
			- the name of the Series is "Polio4DoseSeries"
			- Post Processing on the series forecast has not already been run
			- the Series is Not Complete
			- the Number of Doses Administered is == 3
		Confirm the date evalTime is before "07-Aug-2010"
	then
		Obtain the existing DoseRule for Dose Number 4 in the Series $targetSeries as $assign_oDoseRule4
		Set the Minimum Age for DoseRule $assign_oDoseRule4 to TimePeriod "126d"
		Replace the existing DoseRule in the Series $targetSeries with $assign_oDoseRule4
		Obtain the existing DoseRule for Dose Number 3 in the Series $targetSeries as $assign_oDoseRule3
		Set the Minimum Interval for DoseRule $assign_oDoseRule3 to TimePeriod "28d"
		Replace the existing DoseRule in the Series $targetSeries with $assign_oDoseRule3
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end


rule "Polio: If the execution date is before 8/7/2010 and the calculated Earliest Date for Dose 4 is after 8/7/2010, reset the Minimum Age & Minimum Interval back to their original values (4y & 6m, respectively) and recalculate" ruleflow-group "RecommendationForecast"
	dialect "mvel"
	agenda-group "postRecommendationCheck"
	when
		There is a Series $targetSeries
			- post processing on the Series forecast has not already been run
			- a Forecast for the Series has been made and a Recommendation Date has been determined
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.400"
			- the name of the Series is "Polio4DoseSeries"
			- the effective dose number in the series is == 4
			- make note of the Earliest Date as $earliestDate
		Confirm the date evalTime is before "07-Aug-2010"
		Confirm the date $earliestDate is after "07-Aug-2010"
	then
		Clear forecasted recommendations from consideration in series $targetSeries
		Obtain the existing DoseRule for Dose Number 4 in the Series $targetSeries as $assign_oDoseRule4
		Set the Minimum Age for DoseRule $assign_oDoseRule4 to TimePeriod "4y"
		Replace the existing DoseRule in the Series $targetSeries with $assign_oDoseRule4
		Obtain the existing DoseRule for Dose Number 3 in the Series $targetSeries as $assign_oDoseRule3
		Set the Minimum Interval for DoseRule $assign_oDoseRule3 to TimePeriod "6m"
		Replace the existing DoseRule in the Series $targetSeries with $assign_oDoseRule3
		Refresh all Facts in the Series $targetSeries for Forecasting
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end
