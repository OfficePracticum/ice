/**
 * Copyright (C) 2017 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */
 
package org.cdsframework.ice.v1_1_0

import java.util.Date
import java.util.Iterator
import java.util.List
import java.util.Set
import org.drools.spi.KnowledgeHelper
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICEFactTypeFinding
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.RecommendationStatus
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.supportingdata.BaseDataEvaluationReason
import org.cdsframework.ice.supportingdatatmp.SupportedFactConcept
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine

global java.util.Date evalTime


///////////////////////////////////////////////////////////// Pneumococcal-Specific Duplicate Shot/Same Day Rules Start Here /////////////////////////////////////////////////////////////

rule "Duplicate Shots/Same Day Pneumococcal Rule # (-1): If PCV and PPSV for target dose 1 of adult series on same day, evaluate the PCV first" ruleflow-group "HistoryEvaluation"
	dialect "mvel"
	agenda-group "duplicateShotSameDay"
	auto-focus true
	when
		$td : TargetDose(status == DoseStatus.EVALUATION_IN_PROCESS, associatedTargetSeries.vaccineGroup == "VACCINE_GROUP_CONCEPT.750", administeredVaccine.cdsConceptName in ("ICE33","ICE109"), 
			doseNumberInSeries == 6, $tdAdministeredShotNumber : administeredShotNumberInSeries)
		$tdother : 	TargetDose(status == DoseStatus.NOT_EVALUATED, associatedTargetSeries.vaccineGroup == "VACCINE_GROUP_CONCEPT.750", administeredVaccine.cdsConceptName in ("ICE133","ICE152"),
			administrationDate == $td.administrationDate, $tdotherAdministeredShotNumber : administeredShotNumberInSeries)
	then
		String _RULENAME = drools.getRule().getName();
		modify($td) {
			setStatus(DoseStatus.NOT_EVALUATED), 
			setAdministeredShotNumberInSeries($tdotherAdministeredShotNumber);
		}
		modify($tdother) {
			setStatus(DoseStatus.PRIMARY_SHOT_DETERMINATION_IN_PROCESS),
			setDoseNumberInSeries(6),
			setAdministeredShotNumberInSeries($tdAdministeredShotNumber);
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, "td modified to NOT_EVALUATED status" + $td " ; tdother modified to PRIMARY_SHOT_DETERMINATION_IN_PROCESS " + $tdother + " in TargetSeries " + $td.associatedTargetSeries);
end


rule "Duplicate Shots/Same Day Pneumococcal Rule # (-2): If PCV and PCV NOS for target dose 1 of adult series on same day, evaluate the PCV" ruleflow-group "HistoryEvaluation"
	dialect "mvel"
	agenda-group "duplicateShotSameDay"
	auto-focus true
	when
		$td : TargetDose(status == DoseStatus.EVALUATION_IN_PROCESS, associatedTargetSeries.vaccineGroup == "VACCINE_GROUP_CONCEPT.750", administeredVaccine.cdsConceptName == "ICE152", 
			$tdAdministeredShotNumber : administeredShotNumberInSeries, doseNumberInSeries == 6)
		$tdother : 	TargetDose(status == DoseStatus.NOT_EVALUATED, associatedTargetSeries.vaccineGroup == "VACCINE_GROUP_CONCEPT.750", administeredVaccine.cdsConceptName == "ICE133",
			administrationDate == $td.administrationDate, $tdotherAdministeredShotNumber : administeredShotNumberInSeries)
	then
		String _RULENAME = drools.getRule().getName();
		modify($td) {
			setStatus(DoseStatus.NOT_EVALUATED),
			setAdministeredShotNumberInSeries($tdotherAdministeredShotNumber);
		}
		modify($tdother) {
			setStatus(DoseStatus.PRIMARY_SHOT_DETERMINATION_IN_PROCESS),
			setDoseNumberInSeries(6), 
			setAdministeredShotNumberInSeries($tdAdministeredShotNumber);
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, "td modified to NOT_EVALUATED status" + $td " ; tdother modified to PRIMARY_SHOT_DETERMINATION_IN_PROCESS " + $tdother + " in TargetSeries " + $td.associatedTargetSeries);
end


rule "Duplicate Shots/Same Day Pneumococcal Rule #1: If 2 pneumococcal shots evluated as valid are administered on the same day and neither are PCV7, then _do not_ mark either as Invalid/Duplicate" 
	ruleflow-group "HistoryEvaluation"
	dialect "mvel"
	agenda-group "duplicateShotSameDay"
	activation-group "duplicateShotActivationGroup"
	auto-focus true
	salience 20
	when
		$td: TargetDose(associatedTargetSeries.vaccineGroup == "VACCINE_GROUP_CONCEPT.750", status == DoseStatus.VALID, hasBeenEvaluated == true, administeredVaccine.cdsConceptName != "ICE100", 
			$tdAdministrationDate : administrationDate,	$tdAdministeredShotNumber : administeredShotNumberInSeries,	$tdAssociatedTargetSeries : associatedTargetSeries)
		not TargetDose(this != $td, associatedTargetSeries == $tdAssociatedTargetSeries, administrationDate == $tdAdministrationDate, hasBeenEvaluated == false)
		$tdother : TargetDose(status == DoseStatus.VALID, this != $td, hasBeenEvaluated == true, associatedTargetSeries == $tdAssociatedTargetSeries, administrationDate == $tdAdministrationDate, 
			administeredVaccine.cdsConceptName != "ICE100", $tdOtherAdministeredShotNumber : administeredShotNumberInSeries)
	then
		String _RULENAME = kcontext.rule.name;
		// Both shots are valid; do nothing
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $tdother + " in TargetSeries " + $tdAssociatedTargetSeries);
end


rule "Duplicate Shots/Same Day Pneumococcal Rule #2: If PCV13 and PCV7 and shot administered >= 6/1/2010, then evaluate PCV13 as Valid and PCV7 as Invalid/Duplicate" 
	ruleflow-group "HistoryEvaluation"
	dialect "mvel"
	agenda-group "duplicateShotSameDay"
	auto-focus true
	salience 10
	when
		$td: TargetDose(associatedTargetSeries.vaccineGroup == "VACCINE_GROUP_CONCEPT.750", hasBeenEvaluated == true, status == DoseStatus.VALID, administeredVaccine.cdsConceptName == "ICE133", 
			administrationDate >= "01-Jun-2010", $tdAdministrationDate : administrationDate, $tdAdministeredShotNumber : administeredShotNumberInSeries,	$tdAssociatedTargetSeries : associatedTargetSeries)
		not TargetDose(this != $td, associatedTargetSeries == $tdAssociatedTargetSeries, administrationDate == $tdAdministrationDate, hasBeenEvaluated == false)
		$tdother : TargetDose(this != $td, associatedTargetSeries == $tdAssociatedTargetSeries, administrationDate == $tdAdministrationDate, hasBeenEvaluated == true, 
			administeredVaccine.cdsConceptName == "ICE100", status == DoseStatus.VALID || status == DoseStatus.ACCEPTED)
	then
		String _RULENAME = kcontext.rule.name;
		modify($tdother) {
			setStatus(DoseStatus.INVALID),
			addInvalidReason(BaseDataEvaluationReason._DUPLICATE_SAME_DAY_REASON.getCdsListItemName());
		}
		modify($td) {
			setStatus(DoseStatus.VALID),
			removeAllEvaluationReasonsFromAllReasonSets();
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $tdother + " in TargetSeries " + $tdAssociatedTargetSeries);
end


rule "Duplicate Shots/Same Day Pneumococcal Rule #3: If PCV13 and PCV7 and shot administered < 6/1/2010, then evaluate PCV7 as Valid and PCV13 as Invalid/Duplicate" 
	ruleflow-group "HistoryEvaluation"
	dialect "mvel"
	agenda-group "duplicateShotSameDay"
	auto-focus true
	salience 10
	when
		$td: TargetDose(associatedTargetSeries.vaccineGroup == "VACCINE_GROUP_CONCEPT.750", hasBeenEvaluated == true, status == DoseStatus.VALID, administeredVaccine.cdsConceptName == "ICE133", 
			administrationDate < "01-Jun-2010", $tdAdministrationDate : administrationDate, $tdAdministeredShotNumber : administeredShotNumberInSeries,	$tdAssociatedTargetSeries : associatedTargetSeries)
		not TargetDose(this != $td, associatedTargetSeries == $tdAssociatedTargetSeries, administrationDate == $tdAdministrationDate, hasBeenEvaluated == false)
		$tdother : TargetDose(this != $td, associatedTargetSeries == $tdAssociatedTargetSeries, hasBeenEvaluated == true, administeredVaccine.cdsConceptName == "ICE100", 
			administrationDate == $tdAdministrationDate, status == DoseStatus.VALID || status == DoseStatus.ACCEPTED)
	then
		String _RULENAME = kcontext.rule.name;
		modify($td) {
			setStatus(DoseStatus.INVALID),
			addInvalidReason(BaseDataEvaluationReason._DUPLICATE_SAME_DAY_REASON.getCdsListItemName());
		}
		modify($tdother) {
			setStatus(DoseStatus.VALID),
			removeAllEvaluationReasonsFromAllReasonSets();
		}
		ICELogicHelper.logDRLDebugMessage(_RULENAME, $tdother + " in TargetSeries " + $tdAssociatedTargetSeries);
end
