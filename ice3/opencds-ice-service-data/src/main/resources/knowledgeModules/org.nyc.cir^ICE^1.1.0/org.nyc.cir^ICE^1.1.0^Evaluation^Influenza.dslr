/**
 * Copyright (C) 2016 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */
 
package org.cdsframework.ice.v1_1_0

import java.util.List
import java.util.Set
import org.drools.spi.KnowledgeHelper
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.Recommendation.RecommendationStatus
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.supportingdatatmp.SupportedDiseaseConcept
import org.cdsframework.ice.supportingdatatmp.SupportedEvaluationConcept
import org.cdsframework.ice.supportingdatatmp.SupportedRecommendationConcept
import org.cdsframework.ice.supportingdatatmp.SupportedVaccineConcept
import org.cdsframework.ice.supportingdatatmp.SupportedVaccineGroupConcept
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine

expander ../org.cdsframework^ICE^1.1.0/org.cdsframework^ICE^1.1.0.dsl

//declare any global variables here
global java.util.Date evalTime
// global org.drools.runtime.KnowledgeContext kcontext


rule "Influenza: No minimum interval between first shot in seasonal series and most recent shot from a prior season" ruleflow-group "HistoryEvaluation"
	dialect "mvel"
	agenda-group "customEvaluationRule"
	activation-group "doseIntervalCheckFromPreviousSeason"
	when
		There is an Administered Shot $currentShot that needs to be evaluated
			- the administered shot number is == 1
		There is a Series $targetSeries that contains the Dose $currentShot
			- the Series belongs to the vaccine group SupportedVaccineGroupConcept.Influenza
	then
		// Don't do anything... overrides activation-group "doseIntervalCheckFromPreviousSeason" interval check from base set of rules
		Record that this dose rule was Processed for the TargetDose $currentShot
		Log that this dose rule fired for the dose $currentShot in the Series $targetSeries
end


rule "Influenza: Evaluate the Influenza Shot as Outside Flu Season if it does not fall within the Season Start and Stop Dates" ruleflow-group "HistoryEvaluation"
	agenda-group "customEvaluationRule"
	activation-group "doseInSeasonCheck"
	when  
		There is an Administered Shot $currentShot that needs to be evaluated
			- make note of the date this shot was administered as $dtAdministrationDateCurrentDose
		There is a Series $targetSeries that contains the Dose $currentShot
			- the Series belongs to the vaccine group SupportedVaccineGroupConcept.Influenza
			- the Shot $currentShot does not fall within the Season start and stop dates of the Series
	then
		Mark the shot $currentShot as Invalid for this Series due to "Outside Flu Season"
		Record that this dose rule was Processed for the TargetDose $currentShot
		Log that this dose rule fired for the dose $currentShot in the Series $targetSeries 
end 

