/**
 * Copyright (C) 2016 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */
 
package org.cdsframework.ice.v1_1_0

import org.drools.spi.KnowledgeHelper
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICEFactTypeFinding
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType
import org.cdsframework.ice.service.Schedule
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.supportingdatatmp.SupportedFactConcept
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.service.Vaccine

expander ../org.cdsframework^ICE^1.1.0/org.cdsframework^ICE^1.1.0.dsl

global java.util.Date evalTime


rule "HepB: Verify Adherece to the Maximum Valid Age for the Vaccine if HepB High Risk Infant Vaccine is Administered" ruleflow-group "HistoryEvaluation"
	agenda-group "customEvaluationRule"
	activation-group "maximumAgeVaccineCheck"
	when
		The patient information $oEvaluatedPerson must be known to complete writing this rule
        There is an Administered Shot $oTargetDose that needs to be evaluated
        	// SupportedVaccineConcept._HEPB_HIGHRISK_INFANT
        	- the vaccine administered is "ICE42"
        	- the vaccine administered has a maximum valid age
        There is a Series $oTargetSeries that contains the Dose $oTargetDose
        Confirm the age of the patient $oEvaluatedPerson at the time the vaccine was administered for dose $oTargetDose is greater than the maximum allowable age for the vaccine
	then
		Mark the shot $oTargetDose as Invalid for this Series due to "Insufficient Antigen"
		Record that this dose rule was Processed for the TargetDose $oTargetDose
        Log that this dose rule fired for the dose $oTargetDose in the Series $oTargetSeries
end


rule "HepB: Verify Adherence to the Maximum Valid Age for the Vaccine if HepB Peds Less than 20 Vaccine is Administered" ruleflow-group "HistoryEvaluation"
	agenda-group "customEvaluationRule"
	activation-group "maximumAgeVaccineCheck"
    when
    	The patient information $oEvaluatedPerson must be known to complete writing this rule
    	There is an Administered Shot $oTargetDose that needs to be evaluated
    		// SupportedVaccineConcept._HEPB_LESSTHAN_20
       		- the vaccine administered is "ICE08"
       		- the vaccine administered has a maximum valid age
		There is a Series $oTargetSeries that contains the Dose $oTargetDose
		Confirm the age of the patient $oEvaluatedPerson at the time the vaccine was administered for dose $oTargetDose is greater than the maximum allowable age for the vaccine
    then
        Mark the shot $oTargetDose as Invalid for this Series due to "Insufficient Antigen"
        Record that this dose rule was Processed for the TargetDose $oTargetDose
        Log that this dose rule fired for the dose $oTargetDose in the Series $oTargetSeries
end 


rule "HepB: Evaluate the Minimum Interval Between Doses 1 and 3" ruleflow-group "HistoryEvaluation"
	agenda-group "customEvaluationRule"
	when  
		There is an Administered Shot $currentDose that needs to be evaluated
			- the dose number in the series is == 3
			- make note of the date this shot was administered as $dtAdministrationDateCurrentDose
		There is an Administered Shot $previousDose
			- the dose number in the series is == 1
			- that has already been evaluated and whose shot validity is VALID
			- make note of the date this shot was administered as $dtAdministrationDatePreviousDose
		There is a Series $targetSeries that contains the Dose $currentDose
			- the Series also contains the Dose $previousDose
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT_HEPB"
		Confirm Elapsed time between $dtAdministrationDatePreviousDose and $dtAdministrationDateCurrentDose < "108d"
	then
		Mark the shot $currentDose as Invalid for this Series due to "Below Minimum Interval"
		Record that this dose rule was Processed for the TargetDose $currentDose
		Log that this dose rule fired for the dose $currentDose in the Series $targetSeries 
end 


// Enough is Enough Rule: "If patient gets 3 or more shots prior to age 164 days and have a valid Dose 2, there is no minimum interval between the 
// next-to-last shot and valid Dose 3 (the final shot) but patient a.) has to meet the minimum interval between valid dose 2 and the final dose 
// (52 days) and b.) patient must meet the minimum age for the final dose in the series (164 days)." This rule overrides generic interval check 
rule "HepB: Enough is Enough Rule" ruleflow-group "HistoryEvaluation"
	agenda-group "customEvaluationRule"
	activation-group "doseIntervalCheck"	// This rule says the dose is VALID ... so we override other checks that might mark it as INVALID or even ACCEPTED
	when
		The patient information $oEvaluatedPerson must be known to complete writing this rule
			- make note of the patient's birthdate as $dtBirthDate
		There is an Administered Shot $currentDose that needs to be evaluated
			- the dose number in the series is == 3
			- the administered shot number is >= 4
			- make note of the target dose number for this shot as $nDoseNumber
			- make note of the date this shot was administered as $dtAdministrationDateCurrentDose
		There is an Administered Shot $doseTwo
			- the dose number in the series is == 2
			- that has already been evaluated and whose shot validity is VALID
			- make note of the date this shot was administered as $dtAdministrationDateDoseTwo
		There is an Administered Shot $administeredShotThree
			 - the administered shot number is == 3
			 - make note of the date this shot was administered as $dtAdministrationDateShotThree
		There is a Series $targetSeries that contains the Dose $currentDose
			- the Series also contains the Dose $doseTwo
			- the Series also contains the Dose $administeredShotThree 
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT_HEPB"
			- the number of doses required to complete this series is >= $nDoseNumber
			- make note of the absolute minimum interval for dose 2 in this series as $minIntervalDoseTwo
			- make note of the absolute minimum age for dose 3 in this series as $minimumAgeDoseCurrentDose
		Confirm elapsed time between $dtAdministrationDateDoseTwo and $dtAdministrationDateCurrentDose >= $minIntervalDoseTwo
		Confirm elapsed time between $dtBirthDate and $dtAdministrationDateShotThree < $minimumAgeDoseCurrentDose
	then
		Record that this dose rule was Processed for the TargetDose $currentDose
		Log that this dose rule fired for the dose $currentDose in the Series $targetSeries 
end


rule "HepB: Mark Series Complete if Two Adult Doses Given to Patient between >= 11 and < 16 Years of Age" ruleflow-group "HistoryEvaluation"
	agenda-group "customEvaluationRule"
	when
		The patient information $oEvaluatedPerson must be known to complete writing this rule
			- make note of the patient's birthdate as $dtBirthDate
		There is an Administered Shot $doseTwo
			- the dose number in the series is == 2
			- that has already been evaluated and whose shot validity is VALID
			// SupportedVaccineConcept._HEPB_GREATEREQUAL_20
			- the vaccine administered is "ICE43"
			- make note of the date this shot was administered as $dtAdministrationDateDoseTwo
		There is an Administered Shot $doseOne
			- the dose number in the series is == 1
			- that has already been evaluated and whose shot validity is VALID
			// SupportedVaccineConcept._HEPB_GREATEREQUAL_20
			- the vaccine administered is "ICE43"
			- make note of the date this shot was administered as $dtAdministrationDateDoseOne
		There is a Series $targetSeries that contains the Dose $doseTwo
			- the Series also contains the Dose $doseOne
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT_HEPB"
		Confirm elapsed time between $dtAdministrationDateDoseOne and $dtAdministrationDateDoseTwo >= "4m-4d"
		Confirm elapsed time between $dtBirthDate and $dtAdministrationDateDoseOne >= 11 DurationType.YEARS
		Confirm elapsed time between $dtBirthDate and $dtAdministrationDateDoseOne < 16 DurationType.YEARS
		Confirm elapsed time between $dtBirthDate and $dtAdministrationDateDoseTwo >= 11 DurationType.YEARS
		Confirm elapsed time between $dtBirthDate and $dtAdministrationDateDoseTwo < 16 DurationType.YEARS
	then
		Mark the Series $targetSeries complete
		Record that this series rule was Processed for the TargetSeries $targetSeries
		Log that this series rule fired for the Series $targetSeries
end
