/**
 * Copyright (C) 2015 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */
 
package org.cdsframework.ice.v1_1_0

import java.util.Date
import java.util.List
import java.util.Set
import org.drools.spi.KnowledgeHelper
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.Recommendation.RecommendationStatus
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.supportingdata.tmp.SupportedDiseaseConcept
import org.cdsframework.ice.supportingdata.tmp.SupportedEvaluationConcept
import org.cdsframework.ice.supportingdata.tmp.SupportedVaccineConcept
import org.cdsframework.ice.supportingdata.tmp.SupportedVaccineGroupConcept
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.service.TimePeriod
import org.cdsframework.ice.service.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine

expander ../org.cdsframework^ICE^1.1.0/org.cdsframework^ICE^1.1.0.dsl

global java.util.Date evalTime
global org.drools.runtime.KnowledgeContext kcontext

       
// For PPSV target dose 1, apply a 5 year interval from the previous shot
rule "PPSV: Recommended interval 5 years for dose 1 from previous target dose 1" ruleflow-group "RecommendationForecast"
agenda-group "customRecommendationRule"
dialect "mvel"
when
	There is a Series $ppsvSeries that needs forecasting
		- the Series belongs to the Vaccine Group SupportedVaccineGroupConcept.PPSV
		- the Effective Dose Number in the series is == 1
		- the number of Administered Shots is > 0
		- make note of the date that the most recent Shot was Administered as $dtAdministrationDate
		- the series is not complete
then
		Add 5 DurationType.YEARS to $dtAdministrationDate and make note of the newly calculated date as $dtCalculated
		Include a Recommendation as $recommendation with Forecast Date $dtCalculated for consideration in the final Forecast of the Series $ppsvSeries
		Record that this Series Rule was Processed for the TargetSeries $ppsvSeries
       	Log that this Series Rule fired for the Series $ppsvSeries
end


// If a PPSV shot has been given and patient is due for PCV, recommended interval= 56 days from PPSV
rule "PPSV: Recommended interval 56 days from PCV if due for PPSV" ruleflow-group "RecommendationForecast"
	dialect "mvel"
	agenda-group "postRecommendationCheck"
	when
		There is a Series $ppsvSeries
			- the Series belongs to the Vaccine Group SupportedVaccineGroupConcept.PPSV
			- post processing on the Series forecast has not already been run
			- a forecast for the Series has been made and a recommendation date has been determined
			- make note of the recommendation date as $ppsvRecommendationDate
		There is a Series $pcvSeries
			- the Series belongs to the Vaccine Group SupportedVaccineGroupConcept.PCV
			- the number of administered shots is > 0
			- make note of the date that the most recent shot was administered as $dtPCVShotDate
	then
		Add 56 DurationType.DAYS to $dtPCVShotDate and make note of the newly calculated date as $dtCalculated
		Include a Recommendation as $recommendation with Forecast Date $dtCalculated for consideration in the final Forecast of the Series $ppsvSeries
		Record that this Series Rule was Processed for the TargetSeries $ppsvSeries
		Log that this Series Rule fired for the Series $ppsvSeries
end
