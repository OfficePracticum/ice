/**
 * Copyright (C) 2015 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */
 
 package org.cdsframework.ice.v1_1_0

import java.util.List
import java.util.Set
import org.drools.spi.KnowledgeHelper
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.Recommendation.RecommendationStatus
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.supportingdata.tmp.SupportedDiseaseConcept
import org.cdsframework.ice.supportingdata.tmp.SupportedEvaluationConcept
import org.cdsframework.ice.supportingdata.tmp.SupportedRecommendationConcept
import org.cdsframework.ice.supportingdata.tmp.SupportedVaccineConcept
import org.cdsframework.ice.supportingdata.tmp.SupportedVaccineGroupConcept
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.service.TimePeriod
import org.cdsframework.ice.service.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine

expander ../org.cdsframework^ICE^1.1.0/org.cdsframework^ICE^1.1.0.dsl

//declare any global variables here
global java.util.Date evalTime
global org.drools.runtime.KnowledgeContext kcontext


rule "Meningococcal: Mark the Series Complete if Dose 1 is Administered >= 16yrs and < 19yrs of Age" ruleflow-group "RecommendationForecast"
	dialect "mvel"
	agenda-group "customRecommendationRule"
	salience 100	// Runs before other custom mening recommendation rules
	when
		The patient information $assign_oEvaluatedPerson must be known to complete writing this rule
			- make note of the patient's birthdate as $dtBirthDate
			- make note of the date as $dtDateAtAge when the patient is "16y" of age				
		There is an Administered Shot $shot
			- that has already been evaluated and whose Shot Validity is VALID
			- make note of the date this shot was administered as $dtAdministrationDate
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the vaccine group SupportedVaccineGroupConcept.Meningococcal
			- the name of the Series is "MCV4 2-Dose Series"
			- the Series contains the Dose $shot
			- the Series is Not Complete
			- the number of Doses Administered is == 1
			- the number of Doses Administered before $dtDateAtAge is == 0
		Confirm elapsed time between $dtBirthDate and $dtAdministrationDate >= "16y" && elapsed time between $dtBirthDate and $dtAdministrationDate < "19y"
	then
		Mark the Series $targetSeries Complete
		Refresh all Facts in the Series $targetSeries for Forecasting
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end


rule "Meningococcal: Recommend Dose 1 at 16yrs of age if Patient >= 16yrs and < 19yrs of Age" ruleflow-group "RecommendationForecast"
	dialect "mvel"
	agenda-group "customRecommendationRule"
	when
		The patient information $assign_oEvaluatedPerson must be known to complete writing this rule
			- make note of the patient's birthdate as $dtBirthDate
			- make note of the date as $dtDateAtAge when the patient is "16y" of age				
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the vaccine group SupportedVaccineGroupConcept.Meningococcal
			- the name of the Series is "MCV4 2-Dose Series"
			- the Series is Not Complete
			- the number of Doses Administered is == 0
		Confirm elapsed time between $dtBirthDate and evalTime >= "16y" && elapsed time between $dtBirthDate and evalTime < "19y"
	then
		Include a Recommendation as $recommendation with forecast date $dtDateAtAge for consideration in the final forecast of the Series $targetSeries
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end


rule "Meningococcal: If a patient completed the series, recommendation is Not Recommended / COMPLETE_HIGH_RISK" ruleflow-group "RecommendationForecast"
	dialect "mvel"
	agenda-group "customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group SupportedVaccineGroupConcept.Meningococcal
			- the Series is Complete	
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.NOT_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to SupportedRecommendationConcept._NOT_RECOMMENDED_COMPLETE_HIGH_RISK.getConcept()
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete		// to ensure that no other rules override this recommendation
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end


rule "Meningococcal: If a patient is >= 19 years and did NOT complete the series before 19 years of age, Recommendation is Conditional/HIGH_RISK and Mark that the Series cannot be Completed" ruleflow-group "RecommendationForecast"
	dialect "mvel"
	agenda-group "customRecommendationRule"
    when
		The patient information $assign_oEvaluatedPerson must be known to complete writing this rule
			- make note of the patient's birthdate as $dtBirthDate
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group SupportedVaccineGroupConcept.Meningococcal
			- the Series is Not Complete
		Confirm elapsed time between $dtBirthDate and evalTime >= "19y"
    then
        Mark that the Series $targetSeries cannot be forecasted as Complete
		Create a Recommendation as $recommendation with Status RecommendationStatus.CONDITIONALLY_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to SupportedRecommendationConcept._RECOMMENDED_CONDITIONALLY_HIGH_RISK_REASON.getConcept()
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete		// to ensure that no other rules override this recommendation
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end

