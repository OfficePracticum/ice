/**
 * Copyright (C) 2016 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */

package org.cdsframework.ice.supportingdatatmp;

import org.opencds.vmr.v1_0.internal.datatypes.CD;


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//This class will be replaced for dynamic import of Supporting Data in a specified format generated by the Rule Authoring Tool         // 
//(e.g. - CAT). See opencds-ice-service-data/src/main/resources/ice-supporting-data/                                                   //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


public enum SupportedEvaluationConcept {
	
	_ACCEPTED_EVALUATION_STATUS("ICE190", "Accepted Dose", "2.16.840.1.113883.3.795.12.100.2", "ICE3 Immunization Validity", "ACCEPTED", "Accepted Dose"),
	_INVALID_EVALUATION_STATUS("ICE208", "Invalid Dose", "2.16.840.1.113883.3.795.12.100.2", "ICE3 Immmunization Validity", "INVALID", "Invalid Dose"),
	_VALID_EVALUATION_STATUS("ICE207", "Valid Dose", "2.16.840.1.113883.3.795.12.100.2", "ICE3 Immunization Validity", "VALID", "Valid Dose"),
	
	_DISEASE_IMMUNITY_DOCUMENTED("ICE998", "Disese Immunity Documented", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Disease Immunity Reason", 
			"DISEASE_DOCUMENTED", "Disease Documented"), 
	_DISEASE_PROOF_OF_IMMUNITY("ICE1000", "Proof of Immunity", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Disease Immunity Reason", 
			"PROOF_OF_IMMUNITY", "Proof of Immunity"),
	_INVALID_AGE_EVALUATION_REASON("ICE250", "Invalid Age", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"INVALID_AGE", "Invalid Age"),
	_PROOF_OF_IMMUNITY_EVALUATION_REASON("ICE251", "Proof of Immunity", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"PROOF_OF_IMMUNITY", "Proof of Immunity"),
	_INSUFFICIENT_ANTIGEN_EVALUATION_REASON("ICE210", "Insufficient Antigen", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"INSUFFICIENT_ANTIGEN", "Insufficient Antigen"),
	_PRIOR_TO_DOB_EVALUATION_REASON("ICE211", "Prior to DOB", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"PRIOR_TO_DOB", "Prior to DOB"),
	_BELOW_MINIMUM_AGE_VACCINE_REASON("ICE_EVAL-MINIMUM_AGE_VACCINE", "Below Minimum Age for Vaccine", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"BELOW_MINIMUM_AGE_VACCINE", "Below Minimum Age for Vaccine"),
	_ABOVE_MAX_AGE_VACCINE_REASON("ICE_EVAL-ABOVE_MAX_AGE_VACCINE", "Above Maximum Age for Vaccine", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"ABOVE_MAX_AGE_VACCINE", "Above Maximum Age for Vaccine"),
	_BELOW_MINIMUM_AGE_EVALUATION_REASON("ICE213", "Below Minimum Age for Series", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"BELOW_MINIMUM_AGE_SERIES", "Below Minimum Age for Series"),
	_BELOW_MINIMUM_AGE_FOR_FINAL_DOSE_REASON("ICE256", "Below Minimum Age for Final Dose", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immmunization Evaluation Reason", 
			"BELOW_MINIMUM_AGE_FINAL_DOSE", "Below Minimum Age for Final Dose"),
	_BELOW_MINIMUM_INTERVAL_PCV_PPSV_REASON("EVAL_EVAL-ICE02", "Below Minimum Interval PCV/PPSV", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immmunization Evaluation Reason", 
			"BELOW_MIN_INTERVAL_PCV_PPSV", "Below Minimum Interval PCV/PPSV"),
	_DUPLICATE_SAME_DAY_REASON("ICE_EVAL-DUPLICATE_SAME_DAY", "Duplicate Same Day", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immmunization Evaluation Reason",
			"DUPLICATE_SAME_DAY", "Duplicate Same Day"),
	_EXTRA_DOSE_EVALUATION_REASON("ICE209", "Extra Dose", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"EXTRA_DOSE", "Extra Dose"),
	_BELOW_MINIMUM_INTERVAL_EVALUATION_REASON("ICE212", "Below Minimum Interval", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"BELOW_MINIMUM_INTERVAL", "Below Minimum Interval"),
	_ABOVE_RECOMMENDED_AGE_EVALUATION_REASON("ICE255", "Above Recommended Age for Series", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"ABOVE_REC_AGE_SERIES", "Above Recommended Age for Series"),
	_BELOW_RECOMMENDED_AGE_EVALUATION_REASON("EVAL-ICE01", "Below Recommended Age for Series", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"BELOW_REC_AGE_SERIES", "Below Recommended Age for Series"),
	_TOO_EARLY_LIVE_VIRUS_EVALUATION_REASON("ICE214", "Too Early Live Virus", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"TOO_EARLY_LIVE_VIRUS", "Too Early Live Virus"),
	_VACCINE_NOT_MEMBER_OF_SERIES_REASON("ICE252", "Vaccine Not Member of Series", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immunization Evaluation Reason", 
			"VACCINE_NOT_MEMBER_OF_SERIES", "Vaccine Not Member of Series"),
	_VACCINE_NOT_ALLOWED_FOR_THIS_DOSE("ICE253", "Vaccine not Allowed for this Dose", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immmunization Evaluation Reason", 
			"VACCINE_NOT_ALLOWED_FOR_THIS_DOSE", "Vaccine not Allowed for this Dose"),
	_VACCINE_NOT_PERMITTED_BOOSTER_ONLY_REASON("ICE254", "Vaccine not Permitted For This Dose (Booster Only)", "2.16.840.1.113883.3.795.12.100.3", 
			"ICE3 Immmunization Evaluation Reason", "BOOSTER_ONLY", "Vaccine not Permitted for this Dose (Booster Only)"),
	_OUTSIDE_SEASON_REASON("ICE_EVAL-OUTSIDE_SEASON", "Outside Season", "2.16.840.1.113883.3.795.12.100.3",	"ICE3 Immmunization Evaluation Reason", 
			"OUTSIDE_SEASON", "Outside Season"),			
	_OUTSIDE_FLU_SEASON_REASON("ICE_EVAL-OUTSIDE_FLU_SEASON", "Outside Flu Season", "2.16.840.1.113883.3.795.12.100.3",	"ICE3 Immmunization Evaluation Reason", 
			"OUTSIDE_FLU_VAC_SEASON", "Outside Flu Season"),			
	_D_AND_T_INVALID_P_VALID_REASON("ICE_EVAL-D_AND_T_INVALID_P_VALID", "Diptheria and Tetanus Invalid, Pertussis Valid", "2.16.840.1.113883.3.795.12.100.3", "ICE3 Immmunization Evaluation Reason", 
			"D_AND_T_INVALID/P_VALID", "Diphtheria and Tetanus Invalid, Pertussis Valid"),			
	_DOSE_OF_PERTUSSIS("ICE_EVAL-DOSE_OF_PERTUSSIS", "Dose of Pertussis", null, null, null, null),
	
	_IMMUNIZATION_EVALUATION_FOCUS_HEPB("ICE202", "Immunization Evaluation (Hep B Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"100", "Immunization Evaluation Focus (Hep B Vaccine Group)"),
	_IMMUNIZATION_EVALUATION_FOCUS_HEPA("ICE205", "Immunization Evaluation (Hep A Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"810", "Immunization Evaluation Focus (Hep A Vaccine Group)"),		
	_IMMUNIZATION_EVALUATION_FOCUS_DTP("ICE203", "Immunization Evaluation (DTP Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"200", "Immunization Evaluation Focus (DTP Vaccine Group)"),
	_IMMUNIZATION_EVALUATION_FOCUS_HIB("ICE204", "Immunization Evaluation (Hib Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"300", "Immunization Evaluation Focus (Hib Vaccine Group)"),
	_IMMUNIZATION_EVALUATION_FOCUS_HPV("ICE273", "Immunization Evaluation (Hib Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"840", "Immunization Evaluation Focus (Hib Vaccine Group)"),
	_IMMUNIZATION_EVALUATION_FOCUS_POLIO("ICE206", "Immunization Evaluation (Polio Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"400", "Immunization Evaluation Focus (Polio Vaccine Group)"),
	_IMMUNIZATION_EVALUATION_FOCUS_MMR("ICE270", "Immunization Evaluation (MMR Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"500", "Immunization Evaluation Focus (MMR Vaccine Group)"),
	_IMMUNIZATION_EVALUATION_FOCUS_VARICELLA("ICE271", "Immunization Evaluation (Varicella Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"600", "Immunization Evaluation Focus (Varicella Vaccine Group)"),
	_IMMUNIZATION_EVALUATION_FOCUS_PCV("ICE274", "Immunization Evaluation (PCV Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"700", "Immunization Evaluation Focus (PCV Vaccine Group)"),
	_IMMUNIZATION_EVALUATION_FOCUS_ROTAVIRUS("ICE272", "Immunization Evaluation (Rotavirus Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"820", "Immunization Evaluation Focus (Rotavirus Vaccine Group)");
			
	private CD supportedEvaluationConcept;
	private CD localEvaluationCodeConcept;

	
	private SupportedEvaluationConcept(String pConceptCodeValue, String pConceptDisplayNameValue) {
		supportedEvaluationConcept = new CD();
		supportedEvaluationConcept.setCode(pConceptCodeValue);
		supportedEvaluationConcept.setDisplayName(pConceptDisplayNameValue);
		
		localEvaluationCodeConcept = new CD();
	}
	
	private SupportedEvaluationConcept(String pConceptCodeValue, String pConceptDisplayNameValue, String pLocalCodeSystem, String pLocalCodeSystemName, String pLocalCodeValue, 
			String pLocalCodeDisplayNameValue) {
		
		supportedEvaluationConcept = new CD();
		supportedEvaluationConcept.setCode(pConceptCodeValue);
		supportedEvaluationConcept.setDisplayName(pConceptDisplayNameValue);
		
		localEvaluationCodeConcept = new CD();
		localEvaluationCodeConcept.setCodeSystem(pLocalCodeSystem);
		localEvaluationCodeConcept.setCodeSystemName(pLocalCodeSystemName);
		localEvaluationCodeConcept.setCode(pLocalCodeValue);
		localEvaluationCodeConcept.setDisplayName(pLocalCodeDisplayNameValue);
	}
	
	/**
	 * Return SupportedEvaluationConcept for the specified concept code; null if no associated SupportedEvaluationConcept exists
	 */
	public static SupportedEvaluationConcept getSupportedEvaluationConceptByConceptCode(String conceptCode) {

		if (conceptCode == null) {
			return null;
		}
		for (SupportedEvaluationConcept vc : SupportedEvaluationConcept.values()) {
			if (conceptCode.equals(vc.getConceptCodeValue())) {
				return vc;
			}
		}
		
		return null;
	}
	
	public CD getConcept() {
		return supportedEvaluationConcept;
	}
	
	public String getConceptCodeValue() {
		return supportedEvaluationConcept.getCode();
	}
	
	public String getConceptDisplayNameValue() {
		return supportedEvaluationConcept.getDisplayName();
	}
	
	public CD getLocalCodeConcept() {
		return localEvaluationCodeConcept;
	}
	
	public String getLocalCodeSystem() {
		return localEvaluationCodeConcept.getCodeSystem();
	}
	
	public String getLocalCodeSystemName() {
		return localEvaluationCodeConcept.getCodeSystemName();
	}
	
	public String getLocalCodeValue() {
		return localEvaluationCodeConcept.getCode();
	}
	
	public String getLocalCodeDisplayName() {
		return localEvaluationCodeConcept.getDisplayName();
	}
	
}
