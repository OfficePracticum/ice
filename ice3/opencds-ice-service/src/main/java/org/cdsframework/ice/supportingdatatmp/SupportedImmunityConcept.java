/**
 * Copyright (C) 2016 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */

package org.cdsframework.ice.supportingdatatmp;

import org.opencds.vmr.v1_0.internal.datatypes.CD;


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//This class will be replaced for dynamic import of Supporting Data in a specified format generated by the Rule Authoring Tool         // 
//(e.g. - CAT). See opencds-ice-service-data/src/main/resources/ice-supporting-data/                                                   //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


public enum SupportedImmunityConcept {
	
	_HEPB_DISEASE_IMMUNITY_FOCUS("ICE997", "Disease Immunity Focus (HepB)", "2.16.840.1.113883.6.103", "ICE3 Disease Immunity Focus", "070.30", "Hepatitis B Immunity Focus"), 
	_HEPA_DISEASE_IMMUNITY_FOCUS("ICE996", "Disease Immunity Focus (HepA)", "2.16.840.1.113883.6.103", "ICE3 Disease Immunity Focus", "070.1", "Hepatitis A Immunity Focus"), 
	_MEASLES_DISEASE_IMMUNITY_FOCUS("ICE995", "Disease Immunity Focus (Measles)", "2.16.840.1.113883.6.103", "ICE3 Disease Immunity Focus", "055.9", "Measles Immunity Focus"),
	_MUMPS_DISEASE_IMMUNITY_FOCUS("ICE994", "Disease Immunity Focus (Mumps)", "2.16.840.1.113883.6.103", "ICE3 Disease Immunity Focus", "072.9", "Mumps Immunity Focus"),
	_RUBELLA_DISEASE_IMMUNITY_FOCUS("ICE993", "Disease Immunity Focus (Rubella)", "2.16.840.1.113883.6.103", "ICE3 Disease Immunity Focus", "056.9", "Rubella Immunity Focus"),
	_VARICELLA_DISEASE_IMMUNITY_FOCUS("ICE992", "Disease Immunity Focus (Varicella)", "2.16.840.1.113883.6.103", "ICE3 Disease Immunity Focus", "052.9", "Varicella Immunity Focus"),
	_ROTAVIRUS_DISEASE_IMMUNITY_FOCUS("ICE991", "Disease Immunity Focus (Rotavirus)", "2.16.840.1.113883.6.103", "ICE3 Disease Immunity Focus", "008.61", "Rotavirus Immunity Focus"),
	_HIB_DISEASE_IMMUNITY_FOCUS("ICE990", "Disease Immunity Focus (Hib)", "2.16.840.1.113883.6.103", "ICE3 Disease Immunity Focus", "482.2", "Hib Immunity Focus");
	private CD supportedImmunityConcept;
	private CD localImmunityCodeConcept;
	
	
	private SupportedImmunityConcept(String pConceptCodeValue, String pConceptDisplayNameValue) {
		supportedImmunityConcept = new CD();
		supportedImmunityConcept.setCode(pConceptCodeValue);
		
		localImmunityCodeConcept = new CD();
	}
	
	private SupportedImmunityConcept(String pConceptCodeValue, String pConceptDisplayNameValue, String pLocalCodeSystem, String pLocalCodeSystemName, String pLocalCodeValue, 
			String pLocalCodeDisplayNameValue) {
		
		supportedImmunityConcept = new CD();
		supportedImmunityConcept.setCode(pConceptCodeValue);
		supportedImmunityConcept.setDisplayName(pConceptDisplayNameValue);
		
		localImmunityCodeConcept = new CD();
		localImmunityCodeConcept.setCodeSystem(pLocalCodeSystem);
		localImmunityCodeConcept.setCodeSystemName(pLocalCodeSystemName);
		localImmunityCodeConcept.setCode(pLocalCodeValue);
		localImmunityCodeConcept.setDisplayName(pLocalCodeDisplayNameValue);
	}
	
	public CD getConcept() {
		return supportedImmunityConcept;
	}
	
	public String getConceptCodeValue() {
		return supportedImmunityConcept.getCode();
	}
	
	public String getConceptDisplayNameValue() {
		return supportedImmunityConcept.getDisplayName();
	}
	
	public CD getLocalCodeConcept() {
		return localImmunityCodeConcept;
	}
	
	public String getLocalCodeSystem() {
		return localImmunityCodeConcept.getCodeSystem();
	}
	
	public String getLocalCodeSystemName() {
		return localImmunityCodeConcept.getCodeSystemName();
	}
	
	public String getLocalCodeValue() {
		return localImmunityCodeConcept.getCode();
	}
	
	public String getLocalCodeDisplayName() {
		return localImmunityCodeConcept.getDisplayName();
	}
	
}
