/**
 * Copyright (C) 2016 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */

package org.cdsframework.ice.supportingdatatmp;

import org.opencds.vmr.v1_0.internal.datatypes.CD;


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//This class will be replaced for dynamic import of Supporting Data in a specified format generated by the Rule Authoring Tool         // 
//(e.g. - CAT). See opencds-ice-service-data/src/main/resources/ice-supporting-data/                                                   //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


public enum SupportedRecommendationConcept {

	_RECOMMENDED_RECOMMENDATION_STATUS("ICE219", "Recommended", "2.16.840.1.113883.3.795.12.100.5", "ICE3 Immunization Recommendation", 
			"RECOMMENDED", "Due Now"),
	_CONDITIONAL_RECOMMENDATION_STATUS("ICE220", "Conditionally Recommended", "2.16.840.1.113883.3.795.12.100.5", "ICE3 Immunization Recommendation", 
			"CONDITIONAL", "Conditionally Recommended"),
	_FUTURE_RECOMMEDATION_STATUS("ICE222", "Recommended in Future", "2.16.840.1.113883.3.795.12.100.5", "ICE3 Immunization Recommendation", 
			"FUTURE_RECOMMENDED", "Future Recommendation"),
	_NOT_RECOMMENDED_RECOMMENDATION_STATUS("ICE221", "Not Recommended", "2.16.840.1.113883.3.795.12.100.5", "ICE3 Immunization Recommendation", 
			"NOT_RECOMMENDED", "Not Recommended"),
	
	_CONDITIONAL_RECOMMENDATION_TOO_OLD_HIGH_RISK_REASON("ICE281", "Immunization Conditionally Recommended (Too Old High Risk)", "2.16.840.1.113883.3.795.12.100.6", 
			"ICE3 Immunization Recommendation Reason", "TOO_OLD_HIGH_RISK", "Conditionally Recommended (Too Old High Risk)"),
	_CONDITIONAL_RECOMMENDATION_ABOVE_AGE_MAY_COMPLETE_REASON("ICE282", "Immunization Conditionally Recommended (Above Age May Complete)", "2.16.840.1.113883.3.795.12.100.6", 
			"ICE3 Immunization Recommendation Reason", "ABOVE_AGE_MAY_COMPLETE", "Conditionally Recommended (Above Age May Complete)"),
	_RECOMMENDED_DUE_NOW_REASON("ICE223", "Immunization Recommended (Due Now)", "2.16.840.1.113883.3.795.12.100.6", "ICE3 Immunization Recommendation Reason", 
			"DUE_NOW", "Immunization Recommended (Due Now)"),
	_RECOMMENDED_CONDITIONALLY_HIGH_RISK_REASON("ICE224", "Immunization Conditionally Recommended (High Risk)", "2.16.840.1.113883.3.795.12.100.6", "ICE3 Immunization Recommendation Reason", 
			"HIGH_RISK", "Immunization Conditionally Recommended"),
	_RECOMMENDED_CONDITIONALLY_ABOVE_AGE_MAY_COMPLETE("ICE231", "Immunization Conditionally Recommended (Above Age May Complete)", "2.16.840.1.113883.3.795.12.100.6", 
			"ICE3 Immunization Recommendation Reason", "ABOVE_AGE_MAY_COMPLETE", "Above Age May Complete"),
	_RECOMMENDED_IN_FUTURE_REASON("ICE225", "Immunization Recommended in Future (Due In Future)", "2.16.840.1.113883.3.795.12.100.6", "ICE3 Immunization Recommendation Reason", 
			"DUE_IN_FUTURE", "Immunization Recommended in Future (Due In Future)"),
	_NOT_RECOMMENDED_COMPLETE_REASON("ICE226", "Immunization Not Recommended (Complete)", "2.16.840.1.113883.3.795.12.100.6", "ICE3 Immunization Recommendation Reason", 
			"COMPLETE", "Immunization Not Recommended (Complete)"), 
	_NOT_RECOMMENDED_NOT_SPECIFIED_REASON("ICE280", "Immunization Not Recommended (Reason Not Specified)", "2.16.840.1.113883.3.795.12.100.6", "ICE3 Immunization Recommendation Reason", 
			"NOT_SPECIFIED", "Immunization Not Recommended (Reason Not Specified)"), 
	_NOT_RECOMMENDED_PROOF_OF_IMMUNITY_REASON("ICE1000", "Immunization Not Recommended (Proof of Immunity)", "2.16.840.1.113883.3.795.12.100.6", "ICE3 Immunization Recommendation Reason", 
			"PROOF_OF_IMMUNITY", "Proof of Immunity"),
	_NOT_RECOMMENDED_DISEASE_DOCUMENTED_REASON("ICE998", "Immunization Not Recommended (Disease Documented)", "2.16.840.1.113883.3.795.12.100.6", "ICE3 Immunization Recommendation Reason", 
			"DISEASE_DOCUMENTED", "Disease Documented"),
	_NOT_RECOMMENDED_TOO_OLD_REASON("ICE227", "Immunization Not Recommended (Too Old)", "2.16.840.1.113883.3.795.12.100.6", "ICE3 Immunization Recommendation Reason", "TOO_OLD", 
			"Not Recommended at this age"),
	_NOT_RECOMMENDED_VAC_GROUP_NO_LONGER_REC("ICE_REC-VAC_GROUP_NO_LONGER_REC", "Vaccine Group No Longer Recommended", "2.16.840.1.113883.3.795.12.100.6", 
			"ICE3 Immunization Recommendation Reason", "VAC_GROUP_NO_LONGER_REC", "Vaccine Group No Longer Recommended"),
	_NOT_RECOMMENDED_COMPLETE_HIGH_RISK("ICE_REC-NOT_RECOMMENDED_COMPLETE_HIGH_RISK", "Immunization Recommended (Complete High Risk)", "2.16.840.1.113883.3.795.12.100.6", "ICE3 Immunization Recommendation Reason", 
			"COMPLETE_HIGH_RISK", "Immunization Recommended (Complete High Risk)"),			
	
	_EXECUTION_TIME_BEFORE_SHOTS_ADMINISTERED("ICE_REC-EXECUTION_TIME_BEFORE_ADMINISTERED_SHOTS", "Recommendation Cannot Be Made (Execution Time Before Administered)", 
			"2.16.840.1.113883.3.795.12.100.6", "ICE3 Immunization Recommendation Reason", "EXECUTION_TIME_BEFORE_ADMINISTERED_SHOTS", 
			"Recommendation Cannot Be Made (Execution Time Before Administered Shots)");

			/*
	_IMMUNIZATION_RECOMMENDATION_FOCUS_HEPB("ICE202", "Immunization Recommendation (Hep B Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Recommendation Focus", 
			"100", "Immunization Recommendation Focus (Hep B Vaccine Group)"),
	_IMMUNIZATION_RECOMMENDATION_FOCUS_HEPA("ICE205", "Immunization Recommendation (Hep A Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Recommendation Focus", 
			"810", "Immunization Recommendation Focus (Hep A Vaccine Group)"),
	_IMMUNIZATION_RECOMMENDATION_FOCUS_DTP("ICE203", "Immunization Recommendation (DTP Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Recommendation Focus", 
			"200", "Immunization Recommendation Focus (DTP Vaccine Group)"),
	_IMMUNIZATION_RECOMMENDATION_FOCUS_HIB("ICE204", "Immunization Recommendation (Hib Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Recommendation Focus", 
			"300", "Immunization Recommendation Focus (Hib Vaccine Group)"),
	_IMMUNIZATION_RECOMMENDATION_FOCUS_POLIO("ICE206", "Immunization Recommendation (Polio Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Recommendation Focus", 
			"400", "Immunization Recommendation Focus (Polio Vaccine Group)"),
	_IMMUNIZATION_RECOMMENDATION_FOCUS_MMR("ICE270", "Immunization Recommendation (MMR Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Recommendation Focus", 
			"500", "Immunization Recommendation Focus (MMR Vaccine Group)"),
	_IMMUNIZATION_RECOMMENDATION_FOCUS_VARICELLA("ICE271", "Immunization Recommendation (Varicella Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Recommendation Focus", 
			"600", "Immunization Recommendation Focus (Varicella Vaccine Group)"),
	_IMMUNIZATION_RECOMMENDATION_FOCUS_PCV("ICE274", "Immunization Evaluation (PCV Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Evaluation Focus", 
			"700", "Immunization Evaluation Focus (PCV Vaccine Group)"),
	_IMMUNIZATION_RECOMMENDATION_FOCUS_ROTAVIRUS("ICE272", "Immunization Recommendation (Rotavirus Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Recommendation Focus", 
			"820", "Immunization Recommendation Focus (Rotavirus Vaccine Group)"),
	_IMMUNIZATION_RECOMMENDATION_FOCUS_HPV("ICE273", "Immunization Recommendation (HPV Vaccine Group)", "2.16.840.1.113883.3.795.12.100.1", "ICE3 Immunization Recommendation Focus", 
			"840", "Immunization Recommendation Focus (HPV Vaccine Group)");
	*/
	
	private CD supportedRecommendationConcept;
	private CD localRecommendationCodeConcept;

	
	private SupportedRecommendationConcept(String pConceptCodeValue, String pConceptDisplayNameValue) {
		supportedRecommendationConcept = new CD();
		supportedRecommendationConcept.setCode(pConceptCodeValue);
		supportedRecommendationConcept.setDisplayName(pConceptDisplayNameValue);
		
		localRecommendationCodeConcept = new CD();
	}
	
	private SupportedRecommendationConcept(String pConceptCodeValue, String pConceptDisplayNameValue, String pLocalCodeSystem, String pLocalCodeSystemName, String pLocalCodeValue, 
			String pLocalCodeDisplayNameValue) {
		
		supportedRecommendationConcept = new CD();
		supportedRecommendationConcept.setCode(pConceptCodeValue);
		supportedRecommendationConcept.setDisplayName(pConceptDisplayNameValue);
		
		localRecommendationCodeConcept = new CD();
		localRecommendationCodeConcept.setCodeSystem(pLocalCodeSystem);
		localRecommendationCodeConcept.setCodeSystemName(pLocalCodeSystemName);
		localRecommendationCodeConcept.setCode(pLocalCodeValue);
		localRecommendationCodeConcept.setDisplayName(pLocalCodeDisplayNameValue);
	}
	
	/**
	 * Return SupportedRecommendationConcept for the specified concept code; null if no associated SupportedReommendationConcept exists
	 */
	public static SupportedRecommendationConcept getSupportedRecommendationConceptByConceptCode(String conceptCode) {

		if (conceptCode == null) {
			return null;
		}
		for (SupportedRecommendationConcept vc : SupportedRecommendationConcept.values()) {
			if (conceptCode.equals(vc.getConceptCodeValue())) {
				return vc;
			}
		}
		
		return null;
	}
	
	public CD getConcept() {
		return supportedRecommendationConcept;
	}
	
	public String getConceptCodeValue() {
		return supportedRecommendationConcept.getCode();
	}
	
	public String getConceptDisplayNameValue() {
		return supportedRecommendationConcept.getDisplayName();
	}
	
	public CD getLocalCodeConcept() {
		return localRecommendationCodeConcept;
	}
	
	public String getLocalCodeSystem() {
		return localRecommendationCodeConcept.getCodeSystem();
	}
	
	public String getLocalCodeSystemName() {
		return localRecommendationCodeConcept.getCodeSystemName();
	}
	
	public String getLocalCodeValue() {
		return localRecommendationCodeConcept.getCode();
	}
	
	public String getLocalCodeDisplayName() {
		return localRecommendationCodeConcept.getDisplayName();
	}
}

