/**
 * Copyright (C) 2021 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */

package knowledgeModule.gov.nyc.cir.ice

import java.util.List
import java.util.Set
import java.util.Date
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseRule
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICEFactTypeFinding
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.RecommendationStatus
import org.cdsframework.ice.service.Schedule
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.supportingdatatmp.SupportedFactConcept
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine

expander ../../knowledgeCommon/org.cdsframework.ice/org.cdsframework^ICE^1.0.0.dsl

global java.util.Date evalTime
global org.cdsframework.ice.service.Schedule schedule


/*************************************************************************************************************************************************************************************
 Series Completion Special Rule
 Once a patient completes:
     either the Pfizer COVID-19 2-dose series or the Moderna COVID-19 2-dose series, the Recommendation is Conditional and the reason code is COMPLETE_HIGH_RISK. 
     either the Pfizer COVID-19 2-dose series or the Moderna COVID-19 2-dose series AND receives an additional dose, the Recommendation is Not Recommended and reason code is COMPLETE.
     either the 1) Janssen COVID-19 1-dose series, 2) COVID-19 vaccine series not authorized by the FDA, but authorized by the WHO, or a 3) COVID-19 vaccine series not authorized by 
     the FDA or WHO, but is an active COVID-19 vaccine candidate as part of a U.S.-based clinical trial of a COVID-19 vaccine, the Recommendation is Not Recommended/COMPLETE_HIGH_RISK.
/************************************************************************************************************************************************************************************/        

// If the patient completes the Pfizer COVID-19 2-dose series (no extra doses), the Recommendation is Conditional with reason code COMPLETE_HIGH_RISK
rule "COVID-19: If the patient has completed the Pfizer 2-dose series with no extra doses and no extra dose has been administrered, recommend Conditional with reason code is COMPLETE_HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Pfizer2DoseSeries"
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.CONDITIONALLY_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE_HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// If the patient completes the Moderna COVID-19 2-dose series (no extra doses), the Recommendation is Conditional with reason code COMPLETE_HIGH_RISK
rule "COVID-19: If the patient has completed the Moderna 2-dose series with no extra doses and no extra dose has been administrered, recommend Conditional with reason code is COMPLETE_HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Moderna2DoseSeries"
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.CONDITIONALLY_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE_HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// If the patient completes the Janssen COVID-19 1-dose series (no extra doses), the Recommendation is Not Recommended with reason code COMPLETE_HIGH_RISK
rule "COVID-19: If the patient has completed the Janssen 1-dose series and no extra dose has been administrered, recommend Not Recommended with reason code is COMPLETE_HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Janssen1DoseSeries"
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.NOT_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE_HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// If the patient completes a series for vaccines that are WHO-Approved vaccines or a part of an active clinical trial, the Recommendation is Not Recommended with reason code COMPLETE_HIGH_RISK
rule "COVID-19: If the patient has completed a series for a vaccine that is WHO-approved or part of an active clinical trial and no extra dose has been administrered, recommend Not Recommended with reason code COMPLETE_HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series a member of ("COVID19AstraZeneca2DoseSeries", "COVID19BIBPSinopharm2DoseSeries", "COVID19CoronaVacSinovac2DoseSeries", "COVID19Novavax2DoseSeries")
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.NOT_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE_HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end	

/*************************************************************************************************************************************************************************************
 END Series Completion Special Rule
/************************************************************************************************************************************************************************************/


rule "COVID-19: If the patient has no shots on record and is >= 12 years old, recommend at the vaccine group level at today's date"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the number of administered shots is == 0
		The patient information $patientInformation must be known to complete writing this rule
			- make note of the date as $dtDateAtAge12 when the patient is "12y" of age
		Confirm the date evalTime is on the same date or after $dtDateAtAge12
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.DUE_NOW"
		Set the recommendation Recommended Forecast Date for $recommendation to evalTime
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end
 

rule "COVID-19: If the patient has no shots on record and is < 12 years old, recommend at the vaccine group level at 12 years of age"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the number of administered shots is == 0
		The patient information $patientInformation must be known to complete writing this rule
			- make note of the date as $dtDateAtAge12 when the patient is "12y" of age
		Confirm the date evalTime is before $dtDateAtAge12
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.DUE_NOW"
		Set the recommendation Recommended Forecast Date for $recommendation to $dtDateAtAge12
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end


// If the series is not complete and the last shot administered is CVX 213, recommend earliest and routine age of 18 years
rule "COVID-19: If the Series is not complete and the last shot administered was CVX 213, recommend earliest and routine age of 18 years"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the Series is not complete
			- make note of the last shot administered in the series as $lastShotAdministered
		There is an Administered Shot $administeredShot
			- that is the same shot as $lastShotAdministered
			- the vaccine administered is "ICE213"
		The patient information $oEvaluatedPerson must be known to complete writing this rule
			- make note of the date as $ageAt18y when the patient is "18y" of age
	then
		Create a Recommendation as $r for the Series $targetSeries
		Set the recommendation Earliest Forecast Date for $r to $ageAt18y
		Set the recommendation Recommended Forecast Date for $r to $ageAt18y
		Include the Recommendation $r for Consideration in the final forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// If the series is not complete and the last shot administered is CVX 213 or shot not authorized by the FDA, recommend earliest and routine interval of 28 days to the next dose
rule "COVID-19: If the Series is not complete and the last shot administered was CVX 213 or shot not authorized by the FDA, recommend both an minimum and recommended interval of at least 28 days"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the Series is not complete
			- make note of the last shot administered in the series as $lastShotAdministered
		There is an Administered Shot $administeredShot
			- that is the same shot as $lastShotAdministered
			- the vaccine administered a member of ("ICE210", "ICE211", "ICE213", "ICE500", "ICE501", "ICE502", "ICE503", "ICE504", "ICE505", "ICE506", "ICE507", "ICE506", "ICE507", "ICE508", "ICE509", "ICE510", "ICE511")
			- make note of the date this shot was administered as $dtAdministrationDate
	then
		Create a Recommendation as $r for the Series $targetSeries
		Add "28d" to $dtAdministrationDate and make note of the newly calculated date as $dtCalculated
		Set the recommendation Earliest Forecast Date for $r to $dtCalculated
		Set the recommendation Recommended Forecast Date for $r to $dtCalculated
		Include the Recommendation $r for Consideration in the final forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// If the series is not complete and the last shot administered is CVX 213 or shot not authorized by the FDA, recommend at the vaccine group level
rule "COVID-19: If the Series is not complete and the last shot administered was CVX 213 or shot not authorized by the FDA, recommend at the vaccine group level"
	agenda-group "RecommendationForecast^postCustomRecommendationCheck"
	when
		There is a Series $targetSeries
			- a Forecast for the Series has been made
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the Series is not complete
			- post processing on the Series forecast has not already been run
			- a forecast for the Series has been made and a specific vaccine is recommended 
		There is an administered shot $administeredShot
			- the shot belongs to the Series $targetSeries
			- the vaccine administered a member of ("ICE210", "ICE211", "ICE213", "ICE500", "ICE501", "ICE502", "ICE503", "ICE504", "ICE505", "ICE506", "ICE507", "ICE506", "ICE507", "ICE508", "ICE509", "ICE510", "ICE511")
			- make note of the date this shot was administered as $latestShotDate
		There does not exist another administered shot
			- the shot belongs to the Series $targetSeries
			- that is not the same shot as $administeredShot
			- the administration date of the shot is > $latestShotDate
	then
		Unset the recommended vaccine for the forecast in the Series $targetSeries
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


/*************************************************************************************************************************************************************************************
 Recommendation at the Vaccine Level
/************************************************************************************************************************************************************************************/

// When recommending in the Pfizer 2-dose Series, recommend CVX 208 for the next target dose only if a Valid CVX 208 has already been administered.
rule "COVID-19: Recommend CVX 208 for the next target dose in the Pfizer 2-dose Series"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Pfizer2DoseSeries"
			- the Series is not complete
		There exists an Administered Shot
			- the shot belongs to the series $targetSeries
			- that has already been evaluated and whose shot validity is VALID
			- the vaccine administered is "ICE208"
	then
		Create a Recommendation as $oRecommendation for the Series $targetSeries
		Set the Recommendation Vaccine for $oRecommendation to "ICE208"
		Include the Recommendation $oRecommendation for Consideration in the final forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// When recommending in the Moderna 2-dose Series, recommend CVX 207 for the next target dose only if a Valid CVX 207 has already been admininstered
rule "COVID-19: Recommend CVX 207 for the next target dose in the Moderna 2-dose Series"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Moderna2DoseSeries"
			- the Series is not complete
		There exists an Administered Shot
			- the shot belongs to the series $targetSeries
			- that has already been evaluated and whose shot validity is VALID
			- the vaccine administered is "ICE207"
	then
		Create a Recommendation as $oRecommendation for the Series $targetSeries
		Set the Recommendation Vaccine for $oRecommendation to "ICE207"
		Include the Recommendation $oRecommendation for Consideration in the final forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// When recommending in the AstraZeneca 2-dose Series, recommend CVX 210 for the next target dose only if a Valid CVX 210 has already been admininstered
rule "COVID-19: Recommend CVX 210 for the next target dose in the AstraZeneca 2-dose Series"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19AstraZeneca2DoseSeries"
			- the Series is not complete
		There exists an Administered Shot
			- the shot belongs to the series $targetSeries
			- that has already been evaluated and whose shot validity is VALID
			- the vaccine administered is "ICE210"
	then
		Create a Recommendation as $oRecommendation for the Series $targetSeries
		Set the Recommendation Vaccine for $oRecommendation to "ICE210"
		Include the Recommendation $oRecommendation for Consideration in the final forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end

/*************************************************************************************************************************************************************************************
 END Recommendation at the Vaccine Level
/************************************************************************************************************************************************************************************/