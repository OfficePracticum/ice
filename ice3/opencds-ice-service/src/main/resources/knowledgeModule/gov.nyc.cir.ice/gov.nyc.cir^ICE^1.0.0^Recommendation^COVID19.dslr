/**
 * Copyright (C) 2021 New York City Department of Health and Mental Hygiene, Bureau of Immunization
 * Contributions by HLN Consulting, LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version. You should have received a copy of the GNU Lesser
 * General Public License along with this program. If not, see <http://www.gnu.org/licenses/> for more
 * details.
 *
 * The above-named contributors (HLN Consulting, LLC) are also licensed by the New York City
 * Department of Health and Mental Hygiene, Bureau of Immunization to have (without restriction,
 * limitation, and warranty) complete irrevocable access and rights to this project.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; THE
 *
 * SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
 * BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, IF ANY, OR DEVELOPERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES, OR OTHER LIABILITY OF ANY KIND, ARISING FROM, OUT OF, OR IN CONNECTION WITH
 * THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * For more information about this software, see http://www.hln.com/ice or send
 * correspondence to ice@hln.com.
 */

package knowledgeModule.gov.nyc.cir.ice

import java.util.List
import java.util.Set
import java.util.Date
import org.opencds.vmr.v1_0.internal.EvalTime
import org.opencds.vmr.v1_0.internal.EvaluatedPerson
import org.cdsframework.ice.service.DiseaseImmunity
import org.cdsframework.ice.service.DoseRule
import org.cdsframework.ice.service.DoseStatus
import org.cdsframework.ice.service.ICEFactTypeFinding
import org.cdsframework.ice.service.ICELogicHelper
import org.cdsframework.ice.service.Recommendation
import org.cdsframework.ice.service.RecommendationStatus
import org.cdsframework.ice.service.Schedule
import org.cdsframework.ice.service.SeriesRules
import org.cdsframework.ice.service.TargetDose
import org.cdsframework.ice.service.TargetSeries
import org.cdsframework.ice.util.TimePeriod
import org.cdsframework.ice.util.TimePeriod.DurationType
import org.cdsframework.ice.service.Vaccine
import org.cdsframework.ice.supportingdatatmp.SupportedFactConcept
import org.cdsframework.ice.supportingdata.BaseDataRecommendationReason

expander ../../knowledgeCommon/org.cdsframework.ice/org.cdsframework^ICE^1.0.0.dsl

global java.util.Date evalTime
global org.cdsframework.ice.service.Schedule schedule


/*************************************************************************************************************************************************************************************
 ____Series Completion Special Rules____
/************************************************************************************************************************************************************************************/

rule "COVID-19: If the patient is < 16y has completed the Childhood Primary Series and no extra doses have been administered, then recommend CONDITIONAL / COMPLETE_HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series a member of ("COVID19Pfizer2DoseSeries", "COVID19Moderna2DoseSeries", "COVID19Janssen1DoseSeries")
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
		There is an administered shot $firstValidDose
			- the shot belongs to the series $targetSeries
			- that has already been evaluated and whose Shot Validity is VALID
			- make note of the date this shot was administered as $administrationDateOf1stDose
		There does not exist an administered shot
			- the shot belongs to the series $targetSeries
			- that has already been evaluated and whose shot validity is VALID
			- the administration date of the shot is < $administrationDateOf1stDose
		The patient information $oEvaluatedPerson must be known to complete writing this rule
			- make note of the Patient's birthdate as $dtBirthDate
			- make note of the date as $dateAt16yOfAge when the patient is "16y" of age
			- the date $administrationDateOf1stDose < $dateAt16yOfAge
			- the date evalTime < $dateAt16yOfAge
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.CONDITIONALLY_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE_HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


rule "COVID-19: If the patient completes the Childhood Primary Series and an additional dose has been administered, then recommend CONDITIONAL / COMPLETE_HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Pfizer2DoseSeries"
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired+1
		There is an administered shot $firstValidDose
			- the shot belongs to the series $targetSeries
			- that has already been evaluated and whose Shot Validity is VALID
			- make note of the date this shot was administered as $administrationDateOf1stDose
		There does not exist an administered shot
			- the shot belongs to the series $targetSeries
			- that has already been evaluated and whose shot validity is VALID
			- the administration date of the shot is < $administrationDateOf1stDose
		The patient information $oEvaluatedPerson must be known to complete writing this rule
			- make note of the Patient's birthdate as $dtBirthDate
			- make note of the date as $dateAt18yOfAge when the patient is "18y" of age
			- the date $administrationDateOf1stDose < $dateAt18yOfAge
			- the date evalTime < $dateAt18yOfAge
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.CONDITIONALLY_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE_HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


rule "COVID-19: If the patient < 65y has completed the Pfizer Series, no extra doses have been administered and _ALL_ doses were CVX 208/217/218 and < 65y old, then recommend CONDITIONAL / COMPLETE_HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Pfizer2DoseSeries"
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
		There does not exist an administered shot
			- the shot belongs to the series $targetSeries
			- that has already been evaluated and whose Shot Validity is VALID
			- the vaccine administered not a member of ("ICE208", "ICE217", "ICE218")
		The patient information $oEvaluatedPerson must be known to complete writing this rule
			- make note of the Patient's birthdate as $dtBirthDate
		Confirm elapsed time between $dtBirthDate and evalTime < "65y"
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.CONDITIONALLY_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE_HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


rule "COVID-19: If the patient >= 16y has completed the Janssen Series and no extra doses have been administered, then recommend a booster dose at age 16y or recommended interval of 8 weeks, whichever is later"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Janssen1DoseSeries"
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
		There is an administered shot $lastShotAdministered
			- the shot belongs to the series $targetSeries
			- the dose number in the series is == $numberOfDosesRequired
			- that has already been evaluated
			- make note of the date this shot was administered as $lastShotAdministeredDate
		There does not exist an administered shot
			- the shot belongs to the series $targetSeries
			- that has already been evaluated
			- the administration date of the shot is > $lastShotAdministeredDate
		The patient information $oEvaluatedPerson must be known to complete writing this rule
			- make note of the date as $dtAtAge16y when the Patient is "16y" of age
			- the date evalTime >= $dtAtAge16y
	then
		Create a Recommendation as $r_interval for the Series $targetSeries
		Add "8w" to $lastShotAdministeredDate and make note of the newly calculated date as $dtCalculated
		Set the recommendation Recommended Forecast Date for $r_interval to $dtCalculated
		Include the Recommendation $r_interval for Consideration in the final forecast of the Series
		Create a Recommendation as $r_age for the Series $targetSeries
		Set the recommendation Recommended Forecast Date for $r_age to $dtAtAge16y
		Include the Recommendation $r_age for Consideration in the final forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


rule "COVID-19: If the patient >= 16y has completed the Pfizer or Moderna Series and no extra doses have been administered, then recommend a booster dose at age 16y or recommended interval of 6 months, whichever is later"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series a member of ("COVID19Pfizer2DoseSeries", "COVID19Moderna2DoseSeries")
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
		There is an administered shot $lastShotAdministered
			- the shot belongs to the series $targetSeries
			- the dose number in the series is == $numberOfDosesRequired
			- that has already been evaluated
			- make note of the date this shot was administered as $lastShotAdministeredDate
		There does not exist an administered shot
			- the shot belongs to the series $targetSeries
			- that has already been evaluated
			- the administration date of the shot is > $lastShotAdministeredDate
		The patient information $oEvaluatedPerson must be known to complete writing this rule
			- make note of the date as $dtAtAge16y when the Patient is "16y" of age
			- the date evalTime >= $dtAtAge16y
	then
		Create a Recommendation as $r_interval for the Series $targetSeries
		Add "6m" to $lastShotAdministeredDate and make note of the newly calculated date as $dtCalculated
		Set the recommendation Recommended Forecast Date for $r_interval to $dtCalculated
		Include the Recommendation $r_interval for Consideration in the final forecast of the Series
		Create a Recommendation as $r_age for the Series $targetSeries
		Set the recommendation Recommended Forecast Date for $r_age to $dtAtAge16y
		Include the Recommendation $r_age for Consideration in the final forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// Because the Pfizer and Moderna 2-dose series has been configured as a recurring dose series; if a recommendation date is forecasted after the either of those series is already complete, add the recommendation reason "BOOSTER_DOSE"
rule "COVID-19: If a dose is recommended in the Pfizer, Moderna or Janssen series and the series is complete, add the recommendation reason BOOSTER_DOSE"
	agenda-group "RecommendationForecast^postCustomRecommendationCheck"
	when
		There is a Series $targetSeries
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series a member of ("COVID19Pfizer2DoseSeries", "COVID19Moderna2DoseSeries" ,"COVID19Janssen1DoseSeries")
			- the Series is complete
			- a forecast for the Series has been made and a shot is Recommended
			- post processing on the Series forecast has not already been run
	then
		Create a Recommendation as $recommendation for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.BOOSTER_DOSE"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// Because the Pfizer 2-dose series has been configured as a recurring dose series, if the recommendation reason for the Pfizer 2-dose series is NOT_RECOMMENDED, the reason has to manually be set to COMPLETE
rule "COVID-19: If Pfizer Series is complete and a dose is NOT_RECOMMENDED (i.e. - 3 or more doses), add the recommendation reason to COMPLETE"
	agenda-group "RecommendationForecast^postCustomRecommendationCheck"
	when
		There is a Series $targetSeries
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Pfizer2DoseSeries"
			- a forecast for the Series has been made and a shot is Not Recommended
			- post processing on the Series forecast has not already been run
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.NOT_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// If the patient completes the Moderna COVID-19 2-dose series (no extra doses), the Recommendation is Conditional with reason code COMPLETE_HIGH_RISK
rule "COVID-19: If the patient has completed the Moderna Series with no extra doses and no extra dose has been administered, recommend Conditional with reason code is COMPLETE_HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Moderna2DoseSeries"
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.CONDITIONALLY_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE_HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// If the patient completes the Janssen COVID-19 1-dose series (no extra doses), the Recommendation is Not Recommended with reason code COMPLETE_HIGH_RISK
rule "COVID-19: If the patient has completed the Janssen Series and no extra dose has been administered, recommend Not Recommended with reason code is COMPLETE_HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series is "COVID19Janssen1DoseSeries"
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.NOT_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE_HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end


// If the patient completes a series for vaccines that are WHO-Approved vaccines or a part of an active clinical trial, the Recommendation is Not Recommended with reason code COMPLETE_HIGH_RISK
rule "COVID-19: If the patient has completed a series for a vaccine that is WHO-approved or part of an active clinical trial and no extra dose has been administered, recommend Not Recommended with reason code COMPLETE_HIGH_RISK"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the name of the Series a member of ("COVID19AstraZeneca2DoseSeries", "COVID19BIBPSinopharm2DoseSeries", "COVID19CoronaVacSinovac2DoseSeries", "COVID19Novavax2DoseSeries", "COVID19COVAXIN2DoseSeries")
			- the Series is complete
			- make note of the number of doses required to complete this Series as $numberOfDosesRequired
			- the number of doses administered is == $numberOfDosesRequired
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.NOT_RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.COMPLETE_HIGH_RISK"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Mark Forecasting of the Series $targetSeries Complete
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end	

/*************************************************************************************************************************************************************************************
 END Series Completion Special Rules
/************************************************************************************************************************************************************************************/

/*************************************************************************************************************************************************************************************
 START Recommendations if no shots on record
/************************************************************************************************************************************************************************************/

rule "COVID-19: If the patient has no doses on record and is < 5 yrs old, recommend at 5 yrs of age"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the number of administered shots is == 0
		The patient information $patientInformation must be known to complete writing this rule
			- make note of the date as $dtDateAtAge5 when the patient is "5y" of age
		Confirm the date evalTime is before $dtDateAtAge5
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.DUE_IN_FUTURE"
		Set the recommendation Recommended Forecast Date for $recommendation to $dtDateAtAge5
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end


rule "COVID-19: If the patient has no doses on record and is >= 5 years, recommend on today's date"
	dialect "mvel"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the number of administered shots is == 0
		The patient information $patientInformation must be known to complete writing this rule
			- make note of the date as $dtDateAtAge5 when the patient is "5y" of age
		Confirm the date evalTime is on the same date or after $dtDateAtAge5
	then
		Create a Recommendation as $recommendation with Status RecommendationStatus.RECOMMENDED for the Series $targetSeries
		Set the Recommendation Reason for $recommendation to "RECOMMENDATION_REASON_CONCEPT.DUE_NOW"
		Set the recommendation Recommended Forecast Date for $recommendation to evalTime
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end

/*************************************************************************************************************************************************************************************
 END Recommendations if no shots on record
/************************************************************************************************************************************************************************************/

/*************************************************************************************************************************************************************************************
 START Recommendation rules if last shot on record was a XVX 213 or shot not authorized by the FDA
/************************************************************************************************************************************************************************************/

// If the series is not complete and the last shot administered is CVX 213 or shot not authorized by the FDA, recommend earliest and routine interval of 28 days to the next dose
rule "COVID-19: If the Series is not complete and the last shot administered was CVX 213 or shot not authorized by the FDA, recommend both an minimum and recommended interval of at least 28 days"
	agenda-group "RecommendationForecast^customRecommendationRule"
	when
		There is a Series $targetSeries that needs forecasting
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the Series is not complete
			- make note of the last shot administered in the series as $lastShotAdministered
		There is an Administered Shot $administeredShot
			- that is the same shot as $lastShotAdministered
			- the vaccine administered a member of ("ICE210", "ICE211", "ICE213", "ICE500", "ICE501", "ICE502", "ICE503", "ICE504", "ICE505", "ICE506", "ICE507", "ICE506", "ICE507", "ICE508", "ICE509", "ICE510", "ICE511")
			- make note of the date this shot was administered as $dtAdministrationDate
	then
		Create a Recommendation as $r for the Series $targetSeries
		Add "28d" to $dtAdministrationDate and make note of the newly calculated date as $dtCalculated
		Set the recommendation Earliest Forecast Date for $r to $dtCalculated
		Set the recommendation Recommended Forecast Date for $r to $dtCalculated
		Include the Recommendation $r for Consideration in the final forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end

/*************************************************************************************************************************************************************************************
 END Recommendation rules if last shot on record was a XVX 213 or shot not authorized by the FDA
/************************************************************************************************************************************************************************************/


/*************************************************************************************************************************************************************************************
 START Recommendation rules of specific vaccines (CVXs 207, 208, 218)
/************************************************************************************************************************************************************************************/

rule "COVID-19: If the series is not complete and the next recommendation date is >= 5 yrs and < 12 yrs, recommend a CVX 218"
	dialect "mvel"
	agenda-group "RecommendationForecast^postRecommendationCheck"
	activation-group "RecommendationForecast^COVID19VaccineSpecific"
	when
		There is a Series $targetSeries
			- a forecast for the Series has been made and a recommendation date has been determined
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- the Series is not complete
			- make note of the recommendation date as $recommendationDate
			- post processing on the Series forecast has not already been run
		The patient information $patientInformation must be known to complete writing this rule
			- make note of the date as $dtDateAtAge5 when the patient is "5y" of age
			- make note of the date as $dtDateAtAge12 when the patient is "12y" of age
		Confirm the date $recommendationDate is on the same date or after $dtDateAtAge5
		Confirm the date $recommendationDate is before $dtDateAtAge12
	then
		Create a Recommendation as $recommendation for the Series $targetSeries
		Set the Recommendation Vaccine for $recommendation to "ICE218"
		Include the Recommendation $recommendation for Consideration in the final Forecast of the Series
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
		Log that this Series Rule fired for the Series $targetSeries
end


// If the most recent shot is a non-FDA vaccine, recommend at the vaccine group level
rule "COVID-19: Recommend at the vaccine group level if the most recent shot was a non-FDA vaccine"
	dialect "mvel"
	agenda-group "RecommendationForecast^postCustomRecommendationCheck"
	activation-group "RecommendationForecast^COVID19VaccineSpecific"
	salience 10
	when
		There is a Series $targetSeries
			- the Series belongs to the Vaccine Group "VACCINE_GROUP_CONCEPT.850"
			- a forecast for the Series has been made and a recommendation date has been determined
			- the Series is not complete
			- make note of the recommendation date as $recommendationDate
			- post processing on the Series forecast has not already been run		
		There is an Administered Shot $lastAdministeredShot
			- the shot belongs to the series $targetSeries
			- that has already been evaluated
			- the vaccine administered a member of ("ICE210", "ICE211", "ICE500", "ICE501", "ICE502", "ICE503", "ICE504", "ICE505", "ICE506", "ICE507", "ICE506", "ICE507", "ICE508", "ICE509", "ICE510", "ICE511")
			- make note of the date this shot was administered as $latestShotDate
		There does not exist another administered shot
			- the shot belongs to the Series $targetSeries
			- that is not the same shot as $lastAdministeredShot
			- that has already been evaluated
			- the vaccine administered not a member of ("ICE210", "ICE211", "ICE500", "ICE501", "ICE502", "ICE503", "ICE504", "ICE505", "ICE506", "ICE507", "ICE506", "ICE507", "ICE508", "ICE509", "ICE510", "ICE511")
			- the administration date of the shot is >= $latestShotDate
	then
		Unset the Recommended Vaccine for the forecast in the Series $targetSeries
		Record that this Series Rule was Processed for the TargetSeries $targetSeries
       	Log that this Series Rule fired for the Series $targetSeries
end

/*************************************************************************************************************************************************************************************
 END Recommendation rules of specific vaccines (CVXs 207,208, 218)
/************************************************************************************************************************************************************************************/