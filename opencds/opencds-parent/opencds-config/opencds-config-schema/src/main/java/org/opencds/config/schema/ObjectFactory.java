//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.05 at 09:07:42 PM EDT 
//


package org.opencds.config.schema;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.opencds.config.schema package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ConfigurationSecurity_QNAME = new QName("org.opencds.dss.config.v1_0", "ConfigurationSecurity");
    private final static QName _ConceptDeterminationMethod_QNAME = new QName("org.opencds.dss.config_rest.v1_0", "conceptDeterminationMethod");
    private final static QName _ExecutionEngine_QNAME = new QName("org.opencds.dss.config_rest.v1_0", "executionEngine");
    private final static QName _KnowledgeModule_QNAME = new QName("org.opencds.dss.config_rest.v1_0", "knowledgeModule");
    private final static QName _PluginPackage_QNAME = new QName("org.opencds.dss.config_rest.v1_0", "pluginPackage");
    private final static QName _SemanticSignifier_QNAME = new QName("org.opencds.dss.config_rest.v1_0", "semanticSignifier");
    private final static QName _SupportingData_QNAME = new QName("org.opencds.dss.config_rest.v1_0", "supportingData");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.opencds.config.schema
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ConfigUser }
     * 
     */
    public ConfigUser createConfigUser() {
        return new ConfigUser();
    }

    /**
     * Create an instance of {@link PluginPackage }
     * 
     */
    public PluginPackage createPluginPackage() {
        return new PluginPackage();
    }

    /**
     * Create an instance of {@link KnowledgeModule }
     * 
     */
    public KnowledgeModule createKnowledgeModule() {
        return new KnowledgeModule();
    }

    /**
     * Create an instance of {@link KnowledgeModule.ConceptDeterminationMethods }
     * 
     */
    public KnowledgeModule.ConceptDeterminationMethods createKnowledgeModuleConceptDeterminationMethods() {
        return new KnowledgeModule.ConceptDeterminationMethods();
    }

    /**
     * Create an instance of {@link ConceptMapping }
     * 
     */
    public ConceptMapping createConceptMapping() {
        return new ConceptMapping();
    }

    /**
     * Create an instance of {@link ConfigSecurity }
     * 
     */
    public ConfigSecurity createConfigSecurity() {
        return new ConfigSecurity();
    }

    /**
     * Create an instance of {@link Link }
     * 
     */
    public Link createLink() {
        return new Link();
    }

    /**
     * Create an instance of {@link Concept }
     * 
     */
    public Concept createConcept() {
        return new Concept();
    }

    /**
     * Create an instance of {@link NamespacedConcept }
     * 
     */
    public NamespacedConcept createNamespacedConcept() {
        return new NamespacedConcept();
    }

    /**
     * Create an instance of {@link ConceptDeterminationMethodBase }
     * 
     */
    public ConceptDeterminationMethodBase createConceptDeterminationMethodBase() {
        return new ConceptDeterminationMethodBase();
    }

    /**
     * Create an instance of {@link ConceptDeterminationMethod }
     * 
     */
    public ConceptDeterminationMethod createConceptDeterminationMethod() {
        return new ConceptDeterminationMethod();
    }

    /**
     * Create an instance of {@link EntityIdentifier }
     * 
     */
    public EntityIdentifier createEntityIdentifier() {
        return new EntityIdentifier();
    }

    /**
     * Create an instance of {@link ExecutionEngine }
     * 
     */
    public ExecutionEngine createExecutionEngine() {
        return new ExecutionEngine();
    }

    /**
     * Create an instance of {@link KMId }
     * 
     */
    public KMId createKMId() {
        return new KMId();
    }

    /**
     * Create an instance of {@link Package }
     * 
     */
    public Package createPackage() {
        return new Package();
    }

    /**
     * Create an instance of {@link SemanticSignifier }
     * 
     */
    public SemanticSignifier createSemanticSignifier() {
        return new SemanticSignifier();
    }

    /**
     * Create an instance of {@link SemanticSignifierId }
     * 
     */
    public SemanticSignifierId createSemanticSignifierId() {
        return new SemanticSignifierId();
    }

    /**
     * Create an instance of {@link PluginPackageId }
     * 
     */
    public PluginPackageId createPluginPackageId() {
        return new PluginPackageId();
    }

    /**
     * Create an instance of {@link Plugin }
     * 
     */
    public Plugin createPlugin() {
        return new Plugin();
    }

    /**
     * Create an instance of {@link PluginId }
     * 
     */
    public PluginId createPluginId() {
        return new PluginId();
    }

    /**
     * Create an instance of {@link SupportingData }
     * 
     */
    public SupportingData createSupportingData() {
        return new SupportingData();
    }

    /**
     * Create an instance of {@link XSDComputableDefinition }
     * 
     */
    public XSDComputableDefinition createXSDComputableDefinition() {
        return new XSDComputableDefinition();
    }

    /**
     * Create an instance of {@link org.opencds.config.schema.ConceptDeterminationMethods }
     * 
     */
    public org.opencds.config.schema.ConceptDeterminationMethods createConceptDeterminationMethods() {
        return new org.opencds.config.schema.ConceptDeterminationMethods();
    }

    /**
     * Create an instance of {@link ExecutionEngines }
     * 
     */
    public ExecutionEngines createExecutionEngines() {
        return new ExecutionEngines();
    }

    /**
     * Create an instance of {@link KnowledgeModules }
     * 
     */
    public KnowledgeModules createKnowledgeModules() {
        return new KnowledgeModules();
    }

    /**
     * Create an instance of {@link PluginPackages }
     * 
     */
    public PluginPackages createPluginPackages() {
        return new PluginPackages();
    }

    /**
     * Create an instance of {@link SemanticSignifiers }
     * 
     */
    public SemanticSignifiers createSemanticSignifiers() {
        return new SemanticSignifiers();
    }

    /**
     * Create an instance of {@link SupportingDataList }
     * 
     */
    public SupportingDataList createSupportingDataList() {
        return new SupportingDataList();
    }

    /**
     * Create an instance of {@link ConfigUser.GrantedAuthorities }
     * 
     */
    public ConfigUser.GrantedAuthorities createConfigUserGrantedAuthorities() {
        return new ConfigUser.GrantedAuthorities();
    }

    /**
     * Create an instance of {@link PluginPackage.Plugins }
     * 
     */
    public PluginPackage.Plugins createPluginPackagePlugins() {
        return new PluginPackage.Plugins();
    }

    /**
     * Create an instance of {@link KnowledgeModule.PreProcessPlugins }
     * 
     */
    public KnowledgeModule.PreProcessPlugins createKnowledgeModulePreProcessPlugins() {
        return new KnowledgeModule.PreProcessPlugins();
    }

    /**
     * Create an instance of {@link KnowledgeModule.PostProcessPlugins }
     * 
     */
    public KnowledgeModule.PostProcessPlugins createKnowledgeModulePostProcessPlugins() {
        return new KnowledgeModule.PostProcessPlugins();
    }

    /**
     * Create an instance of {@link KnowledgeModule.ConceptDeterminationMethods.SecondaryCDM }
     * 
     */
    public KnowledgeModule.ConceptDeterminationMethods.SecondaryCDM createKnowledgeModuleConceptDeterminationMethodsSecondaryCDM() {
        return new KnowledgeModule.ConceptDeterminationMethods.SecondaryCDM();
    }

    /**
     * Create an instance of {@link ConceptMapping.FromConcepts }
     * 
     */
    public ConceptMapping.FromConcepts createConceptMappingFromConcepts() {
        return new ConceptMapping.FromConcepts();
    }

    /**
     * Create an instance of {@link ConfigSecurity.Users }
     * 
     */
    public ConfigSecurity.Users createConfigSecurityUsers() {
        return new ConfigSecurity.Users();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConfigSecurity }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "org.opencds.dss.config.v1_0", name = "ConfigurationSecurity")
    public JAXBElement<ConfigSecurity> createConfigurationSecurity(ConfigSecurity value) {
        return new JAXBElement<ConfigSecurity>(_ConfigurationSecurity_QNAME, ConfigSecurity.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptDeterminationMethod }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "org.opencds.dss.config_rest.v1_0", name = "conceptDeterminationMethod")
    public JAXBElement<ConceptDeterminationMethod> createConceptDeterminationMethod(ConceptDeterminationMethod value) {
        return new JAXBElement<ConceptDeterminationMethod>(_ConceptDeterminationMethod_QNAME, ConceptDeterminationMethod.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExecutionEngine }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "org.opencds.dss.config_rest.v1_0", name = "executionEngine")
    public JAXBElement<ExecutionEngine> createExecutionEngine(ExecutionEngine value) {
        return new JAXBElement<ExecutionEngine>(_ExecutionEngine_QNAME, ExecutionEngine.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link KnowledgeModule }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "org.opencds.dss.config_rest.v1_0", name = "knowledgeModule")
    public JAXBElement<KnowledgeModule> createKnowledgeModule(KnowledgeModule value) {
        return new JAXBElement<KnowledgeModule>(_KnowledgeModule_QNAME, KnowledgeModule.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PluginPackage }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "org.opencds.dss.config_rest.v1_0", name = "pluginPackage")
    public JAXBElement<PluginPackage> createPluginPackage(PluginPackage value) {
        return new JAXBElement<PluginPackage>(_PluginPackage_QNAME, PluginPackage.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SemanticSignifier }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "org.opencds.dss.config_rest.v1_0", name = "semanticSignifier")
    public JAXBElement<SemanticSignifier> createSemanticSignifier(SemanticSignifier value) {
        return new JAXBElement<SemanticSignifier>(_SemanticSignifier_QNAME, SemanticSignifier.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SupportingData }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "org.opencds.dss.config_rest.v1_0", name = "supportingData")
    public JAXBElement<SupportingData> createSupportingData(SupportingData value) {
        return new JAXBElement<SupportingData>(_SupportingData_QNAME, SupportingData.class, null, value);
    }

}
