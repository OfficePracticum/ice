//created on: Mar 25, 2015
package AAA

import org.joda.time.Period;
import org.joda.time.PeriodType;
import java.util.Date;
import java.text.DecimalFormat;

import ca.uhn.fhir.model.api.IDatatype;
import ca.uhn.fhir.model.dstu2.composite.CodeableConceptDt;
import ca.uhn.fhir.model.dstu2.composite.CodingDt;
import ca.uhn.fhir.model.dstu2.composite.ContainedDt;
import ca.uhn.fhir.model.dstu2.resource.CommunicationRequest;
import ca.uhn.fhir.model.dstu2.resource.Provenance;
import ca.uhn.fhir.model.dstu2.resource.Provenance.Agent;
import ca.uhn.fhir.model.dstu2.resource.CommunicationRequest.Payload;
import ca.uhn.fhir.model.dstu2.resource.Observation;
import ca.uhn.fhir.model.dstu2.resource.Patient;
import ca.uhn.fhir.model.primitive.StringDt;
import java.util.ArrayList;
import java.util.List;

global java.lang.String clientLanguage
global java.lang.String clientTimeZoneOffset
global java.lang.String focalPersonId
global java.util.Date evalTime
global java.util.HashSet assertions
global java.util.HashMap namedObjects
 

function CommunicationRequest createPayload(String message) {
		CommunicationRequest comRequest = new CommunicationRequest();
		Payload payload = comRequest.addPayload();
		IDatatype stringType = new  StringDt(message);
		payload.setContent(stringType);
return comRequest;
}

function Provenance createProvenance(String message) {
		Provenance prov = new Provenance();
		Agent agent = prov.addAgent();
		IDatatype stringType = new  StringDt(message);
        agent.setDisplay(message);
return prov;
}

function Boolean isCodingContains(CodeableConceptDt cc, String system, String code){
		 Boolean result = false;
		 List<CodingDt> l =  cc.getCoding();
         for (CodingDt codingDt : l) {
			if(codingDt.getSystem().equalsIgnoreCase(system) && 
				codingDt.getCode().equalsIgnoreCase(code)){
				result = true;
			}
		}
 return result;
}

declare AAA_SCREENING_COHORT
    @propertyReactive
    inDemographic : boolean @key
	smokingHistory 	: boolean @key
	outsideScreening : boolean @key
end

rule "Initialize"
	salience 200, no-loop
	when
	then
		insert(new AAA_SCREENING_COHORT(false, false, false));	
end
 

rule "inDemographic"
			dialect "java"
			salience 180
			when
			    $cohort : AAA_SCREENING_COHORT()
				$patient : Patient($birthtime : birthDate, gender == "male")
				$age : Period() from new Period($birthtime.getTime(), new Date().getTime(), PeriodType.years())
				
				eval($age.getYears() >= 65 )
				eval($age.getYears() <= 75 )
			then
			modify($cohort) { setInDemographic( true ) };
			//System.out.println($age.getYears());
							
end 


rule "smokingHistory"
      dialect "java"
      salience 160
      when
       $cohort : AAA_SCREENING_COHORT()
       $obs : Observation()
   	  eval(isCodingContains($obs.getCode(), "http://ehmp.va.gov/terminology/1.0", "/concept/HF.HISTORY%20OF%20SMOKING"))
     
      then
      System.out.println(" smokingHistory = " + $cohort);
      modify($cohort) { setSmokingHistory( true ) };
      System.out.println(" After smokingHistory Rule" );
      System.out.println(" smokingHistory = " + $cohort);

end

rule "hadOutsideScreening"
      dialect "java"
      salience 40
      when
       $cohort : AAA_SCREENING_COHORT()
       $obs : Observation() 
       eval(isCodingContains($obs.getCode(), "http://ehmp.va.gov/terminology/1.0", "/concept/HF.OUTSIDE%20SCREENING%20FOR%20AAA"))
      
      then
      modify($cohort) { setOutsideScreening( true ) };

end

rule "AAAScreening"
      dialect "java"
      salience 0
      when
       $cohort : AAA_SCREENING_COHORT( inDemographic == true, smokingHistory ==true, outsideScreening == false)
      
      then
      CommunicationRequest comRequest = createPayload("The U.S. Preventive Services Task Force recommends one-time screening for abdominal aortic aneurysm (AAA) for men aged 65-75 who have smoked at least 100 cigarettes in their lifetime.");
      CodeableConceptDt category = new CodeableConceptDt("SNOMED", "419772000");
      comRequest.setCategory(category);
      category.getCodingFirstRep().setDisplay("Family Medicine");
      category.setText("Family Medicine");
      
      CodeableConceptDt reason = new CodeableConceptDt("SNOMED", "419772000");
      comRequest.getReason().add(reason);
      reason.getCodingFirstRep().setDisplay("AAA Screening NCR");
      
      CodeableConceptDt priority = new CodeableConceptDt("CDS-System", "50");
      priority.getCodingFirstRep().setDisplay("Routine");
      comRequest.setPriority(priority);
      
      Provenance prov = createProvenance("http://www.uspreventiveservicestaskforce.org/");
      ContainedDt contained = new ContainedDt();
	  contained.getContainedResources().add(prov);
      comRequest.setContained(contained);
      System.out.println("AAA Screening Rule Fired");
      //System.out.println(comRequest.getPayloadFirstRep().getContent());
      namedObjects.put("communicationRequest", comRequest); 
      namedObjects.put("provenance", prov);
end 
